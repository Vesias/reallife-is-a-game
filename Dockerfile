# Production Dockerfile for Next.js 15 Application\n# Multi-stage build for optimal image size and security\n\n# =============================================================================\n# Base Node.js Image\n# =============================================================================\nFROM node:18-alpine AS base\n\n# Install system dependencies\nRUN apk add --no-cache libc6-compat curl\nWORKDIR /app\n\n# =============================================================================\n# Dependencies Stage\n# =============================================================================\nFROM base AS deps\n\n# Copy package files\nCOPY package.json package-lock.json* ./\n\n# Install dependencies with production optimizations\nRUN npm ci --only=production --prefer-offline --no-audit --progress=false && \\\n    npm cache clean --force\n\n# =============================================================================\n# Builder Stage\n# =============================================================================\nFROM base AS builder\n\n# Copy package files\nCOPY package.json package-lock.json* ./\n\n# Install all dependencies (including devDependencies)\nRUN npm ci --prefer-offline --no-audit --progress=false\n\n# Copy source code\nCOPY . .\n\n# Set build environment\nARG NODE_ENV=production\nARG NEXT_TELEMETRY_DISABLED=1\n\nENV NODE_ENV=${NODE_ENV}\nENV NEXT_TELEMETRY_DISABLED=${NEXT_TELEMETRY_DISABLED}\n\n# Type check\nRUN npm run type-check\n\n# Run linting\nRUN npm run lint\n\n# Build the application\nRUN npm run build\n\n# =============================================================================\n# Runtime Stage\n# =============================================================================\nFROM base AS runner\n\n# Set production environment\nENV NODE_ENV=production\nENV NEXT_TELEMETRY_DISABLED=1\n\n# Create non-root user for security\nRUN addgroup --system --gid 1001 nodejs && \\\n    adduser --system --uid 1001 nextjs\n\n# Create necessary directories\nRUN mkdir -p /app/.next/cache && \\\n    mkdir -p /app/logs && \\\n    chown -R nextjs:nodejs /app\n\n# Copy production dependencies\nCOPY --from=deps --chown=nextjs:nodejs /app/node_modules ./node_modules\n\n# Copy built application\nCOPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./\nCOPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static\nCOPY --from=builder --chown=nextjs:nodejs /app/public ./public\n\n# Copy additional files\nCOPY --chown=nextjs:nodejs package.json ./\n\n# Switch to non-root user\nUSER nextjs\n\n# Expose port\nEXPOSE 3000\n\n# Set hostname\nENV HOSTNAME=\"0.0.0.0\"\nENV PORT=3000\n\n# Health check\nHEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \\\n    CMD curl -f http://localhost:3000/api/health || exit 1\n\n# Start the application\nCMD [\"node\", \"server.js\"]\n\n# =============================================================================\n# Labels for metadata\n# =============================================================================\nLABEL maintainer=\"Your Name <your.email@example.com>\"\nLABEL description=\"Next.js 15 Application with Supabase Authentication\"\nLABEL version=\"1.0.0\"\nLABEL org.opencontainers.image.source=\"https://github.com/yourusername/yourrepo\"\n"
  